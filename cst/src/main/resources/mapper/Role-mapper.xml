<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="Role">
    
    <!-- 模板 慎用 会导致没有where 项时 查出全部数据，要用的话要在业务逻辑中增加查询验证标准-->
    <select id="selectAllRole"  parameterType="Role" resultType="Role">
        select * from p_role
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="roleId !='' and roleId !=null">
                    and `roleId` = #{roleId}
            </if>

            <if test="rolename !='' and rolename !=null">
                    and `rolename` = #{rolename}
            </if>

            <if test="description !='' and description !=null">
                    and `description` = #{description}
            </if>

            <if test="disabled !='' and disabled !=null">
                    and `disabled` = #{disabled}
            </if>

        </trim>
    </select>

    
    <insert id="insert" parameterType="Role">
        INSERT INTO P_role
        (roleId,disabled,rolename,description)
        VALUES
        (#{roleId},#{disabled},#{rolename},#{description})
    </insert>

    <select id="verifyAccount" parameterType="Role" resultType="Role">
        select * from P_role WHERE code = #{code}

    </select>

    <update id="updateById" parameterType="java.util.HashMap">
        update p_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="roleId !='' and roleId !=null">
                `roleId` = #{roleId},
            </if>
            <if test="rolename !='' and rolename !=null">
                `rolename` = #{rolename},
            </if>
            <if test="description !='' and description !=null">
                `description` = #{description},
            </if>
            <if test="disabled !='' and disabled !=null">
                `disabled` = #{disabled},
            </if>
        </trim>
        where roleId=#{roleId}
    </update>

    <update id="deleteRoleById" parameterType="Role">
        update p_role set disabled = 0
        where roleId = #{roleId}
    </update>

    <delete id="deleteById" parameterType="java.util.HashMap">
        DELETE FROM P_role where id=#{id}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM P_role where id in
        <foreach item="idItem" collection="list" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>

    <insert id="addUserRole" parameterType="java.util.HashMap">
        INSERT INTO p_userrole
         (userId,roleId)
         VALUES
         (#{userId},#{roleId})
    </insert>

    <!-- 批量添加权限 -->
    <insert id="insertRolePermissionBatch" parameterType="java.util.List">
        insert p_rolepermission(roleId,permissionId,disabled)
        values
        <foreach collection="list" item="item"  separator="," >
            (#{item.roleId},#{item.permissionId},#{item.disabled})
        </foreach>
    </insert>

    <update id="updateRolePermissionBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open=""
                 close="" separator=";">
            UPDATE p_rolepermission
            <set>
                disabled = #{item.disabled}
            </set>
            WHERE roleId = #{item.roleId} AND permissionId =
            #{item.permissionId}
        </foreach>
    </update>

    <delete id="deletePermissionByRoleId" parameterType="String">
        DELETE FROM p_rolepermission WHERE roleId = #{roleId}
    </delete>

    <update id="">

    </update>
</mapper>